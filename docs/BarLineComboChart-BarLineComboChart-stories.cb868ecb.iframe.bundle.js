"use strict";(self.webpackChunk_vannizhang_react_d3_charts=self.webpackChunk_vannizhang_react_d3_charts||[]).push([[249],{"./src/BarLineComboChart/BarLineComboChart.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicExample:function(){return BasicExample},CustomizedOptionsForYScale:function(){return CustomizedOptionsForYScale},CustomizedStyles:function(){return CustomizedStyles},CustomizedXAxisOptions:function(){return CustomizedXAxisOptions},CustomizedYAxisOptions:function(){return CustomizedYAxisOptions},ShowTooltipAndReferenceLine:function(){return ShowTooltipAndReferenceLine},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return BarLineComboChart_stories}});var react=__webpack_require__("./node_modules/react/index.js"),src=(__webpack_require__("./src/styles/variables.css"),__webpack_require__("./node_modules/d3/src/index.js")),SvgContainer=__webpack_require__("./src/SvgContainer/SvgContainer.tsx"),Bars=__webpack_require__("./src/BarChart/Bars.tsx"),BottomAxis=__webpack_require__("./src/Axis/BottomAxis.tsx"),LeftAxis=__webpack_require__("./src/Axis/LeftAxis.tsx"),PointerEventsOverlay=__webpack_require__("./src/PointerEventOverlay/PointerEventsOverlay.tsx"),TooltipOnTop=__webpack_require__("./src/Tooltip/TooltipOnTop.tsx"),constants=__webpack_require__("./src/SvgContainer/constants.ts"),VerticalCrosshairLine=__webpack_require__("./src/CrosshairReferenceLine/VerticalCrosshairLine.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Line=({xScale:xScale,yScale:yScale,data:data,svgContainerData:svgContainerData,stroke:stroke="orange",width:width=1})=>{const lineGroup=react.useRef(),xOffset=(0,react.useMemo)((()=>xScale.bandwidth()/2),[xScale]),valueline=(0,react.useMemo)((()=>(0,src.jvg)().curve(src.FdL).x((d=>xScale(d.x)+xOffset)).y((d=>yScale(d.yLine)))),[xScale,yScale]),remove=()=>{const lines=(0,src.Ys)(lineGroup.current).selectAll("path");lines.size()&&lines.remove().exit()};return(0,react.useEffect)((()=>{svgContainerData&&xScale&&yScale&&data&&(remove(),(0,src.Ys)(lineGroup.current).append("path").data([data]).attr("d",valueline).style("fill","none").style("stroke",stroke).style("stroke-width",width))}),[xScale,yScale,data]),(0,jsx_runtime.jsx)("g",{ref:lineGroup,className:"line-group"})};Line.displayName="Line";var BarLineComboChart_Line=Line;try{Line.displayName="Line",Line.__docgenInfo={description:"",displayName:"Line",props:{xScale:{defaultValue:null,description:"",name:"xScale",required:!0,type:{name:"XScaleBarLineComboChart"}},yScale:{defaultValue:null,description:"",name:"yScale",required:!0,type:{name:"ScaleLinear<number, number, never>"}},svgContainerData:{defaultValue:null,description:"",name:"svgContainerData",required:!1,type:{name:"SvgContainerData"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"BarLineComboChartDataItem[]"}},stroke:{defaultValue:{value:"orange"},description:"",name:"stroke",required:!1,type:{name:"string"}},width:{defaultValue:{value:"1"},description:"",name:"width",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/BarLineComboChart/Line.tsx#Line"]={docgenInfo:Line.__docgenInfo,name:"Line",path:"src/BarLineComboChart/Line.tsx#Line"})}catch(__react_docgen_typescript_loader_error){}const BarLineComboChart=({data:data,showTooltip:showTooltip=!1,yScaleOptions:yScaleOptions={},bottomAxisOptions:bottomAxisOptions={},leftAxisOptions:leftAxisOptions={},fill:fill,strokeColor:strokeColor,strokeWidth:strokeWidth,innerPadding:innerPadding=.2,width:width,height:height,margin:margin=constants.A})=>{const[dimension,setDimension]=(0,react.useState)({height:0,width:0}),[hoveredChartItem,setHoveredChartItem]=(0,react.useState)(),xDomain=(0,react.useMemo)((()=>data&&data.length?data.map((d=>"number"==typeof d.x?d.x.toString():d.x)):[]),[data]),xScale=(0,react.useMemo)((()=>{const{width:width}=dimension;return(0,src.tiA)().paddingInner(innerPadding).range([0,width]).domain(xDomain)}),[dimension,xDomain]),yScale=(0,react.useMemo)((()=>{const{height:height}=dimension;let domain=yScaleOptions?.domain||[];if(!domain.length){domain=[0,(0,src.Fp7)([...data.map((d=>d.yBar)),...data.map((d=>d.yLine))])]}return(0,src.BYU)().range([height,0]).domain(domain)}),[dimension,data]);return(0,jsx_runtime.jsxs)("div",{style:{position:"relative",width:width||"100%",height:height||"100%"},children:[(0,jsx_runtime.jsxs)(SvgContainer.Z,{margin:margin,dimensionOnChange:setDimension,children:[(0,jsx_runtime.jsx)(Bars.Z,{data:data.map((d=>({x:d.x,y:d.yBar}))),xScale:xScale,yScale:yScale,fill:fill}),(0,jsx_runtime.jsx)(BarLineComboChart_Line,{xScale:xScale,yScale:yScale,data:data,stroke:strokeColor,width:strokeWidth}),(0,jsx_runtime.jsx)(BottomAxis.U,{scale:xScale,showGridLines:bottomAxisOptions.showGridLines,tickValues:bottomAxisOptions.tickValues,tickFormatFunction:bottomAxisOptions.tickFormatFunction,shouldRotateTextLabels:bottomAxisOptions.shouldRotateTextLabels}),(0,jsx_runtime.jsx)(LeftAxis.M,{scale:yScale,showGridLines:leftAxisOptions.showGridLines,numberOfTicks:leftAxisOptions.numberOfTicks,tickFormatFunction:leftAxisOptions.tickFormatFunction}),showTooltip?(0,jsx_runtime.jsx)(VerticalCrosshairLine.H,{xPosition:hoveredChartItem?hoveredChartItem.xPosition:null}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}),(0,jsx_runtime.jsx)(PointerEventsOverlay.X,{xScale:xScale,xDomain:xDomain,hoveredChartItemOnChange:setHoveredChartItem})]}),showTooltip&&hoveredChartItem&&(0,jsx_runtime.jsx)(TooltipOnTop.d,{content:data[hoveredChartItem.index]?.tooltip,xPosition:hoveredChartItem.xPosition,dimension:dimension,margin:margin})]})};BarLineComboChart.displayName="BarLineComboChart";try{BarLineComboChart.displayName="BarLineComboChart",BarLineComboChart.__docgenInfo={description:"A combo chart with Bar and Line",displayName:"BarLineComboChart",props:{data:{defaultValue:null,description:"The data used to render the bar and line combo chart.",name:"data",required:!0,type:{name:"BarLineComboChartDataItem[]"}},showTooltip:{defaultValue:{value:"false"},description:"Determines whether to show a tooltip when the user hovers over a bar element.",name:"showTooltip",required:!1,type:{name:"boolean"}},yScaleOptions:{defaultValue:{value:"{}"},description:"Options used to customize the scale function for the y-axis.",name:"yScaleOptions",required:!1,type:{name:"{ domain?: number[]; }"}},bottomAxisOptions:{defaultValue:{value:"{}"},description:"Options used to customize the x-axis at bottom.",name:"bottomAxisOptions",required:!1,type:{name:"BottomAxisOptions"}},leftAxisOptions:{defaultValue:{value:"{}"},description:"Options used to customize the y-axis at left.",name:"leftAxisOptions",required:!1,type:{name:"LeftAxisOptions"}},fill:{defaultValue:null,description:"The fill color of the bar rectangles.",name:"fill",required:!1,type:{name:"string"}},strokeColor:{defaultValue:null,description:"color for the Line",name:"strokeColor",required:!1,type:{name:"string"}},strokeWidth:{defaultValue:null,description:"width of the line",name:"strokeWidth",required:!1,type:{name:"number"}},innerPadding:{defaultValue:{value:"0.2"},description:"The inner padding determines the blank space between bands.\nThe value which must be in the range [0, 1]. A value `0` of innerPadding indicates no blank space betwwen bands.\nThe default value is 0.2.",name:"innerPadding",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"The width of the chart container. If not provided, it will fit the width of the parent container.",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"The height of the chart container. If not provided, it will fit the height of the parent container.",name:"height",required:!1,type:{name:"number"}},margin:{defaultValue:{value:"{\n    top: 15,\n    right: 15,\n    bottom: 30,\n    left: 30,\n}"},description:"Custom margin space around the chart area.",name:"margin",required:!1,type:{name:"SvgContainerMargins"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/BarLineComboChart/BarLineComboChart.tsx#BarLineComboChart"]={docgenInfo:BarLineComboChart.__docgenInfo,name:"BarLineComboChart",path:"src/BarLineComboChart/BarLineComboChart.tsx#BarLineComboChart"})}catch(__react_docgen_typescript_loader_error){}const data=[{x:"12/1",yBar:26,yLine:10,tooltip:"this is a tooltip"},{x:"12/2",yBar:38,yLine:36,tooltip:"this is a tooltip"},{x:"12/3",yBar:10,yLine:15,tooltip:"this is a tooltip"},{x:"12/4",yBar:45,yLine:11,tooltip:"this is a tooltip"},{x:"12/5",yBar:10,yLine:52,tooltip:"this is a tooltip"},{x:"12/6",yBar:12,yLine:5,tooltip:"this is a tooltip"},{x:"12/7",yBar:15,yLine:20,tooltip:"this is a tooltip"},{x:"12/8",yBar:7,yLine:23,tooltip:"this is a tooltip"},{x:"12/9",yBar:23,yLine:17,tooltip:"this is a tooltip"},{x:"12/10",yBar:4,yLine:26,tooltip:"this is a tooltip"}];var BarLineComboChart_stories={title:"Example/BarLineComboChart",component:BarLineComboChart,decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"100%"},children:(0,jsx_runtime.jsx)(Story,{})})],tags:["autodocs"]};const BasicExample={args:{data:data}},CustomizedStyles={args:{data:data,fill:"orange",strokeColor:"lightseagreen",innerPadding:.05,width:350,height:150}},ShowTooltipAndReferenceLine={args:{data:data,showTooltip:!0}},CustomizedXAxisOptions={args:{data:data,bottomAxisOptions:{showGridLines:!0,tickValues:["12/1","12/5","12/10"],shouldRotateTextLabels:!0,tickFormatFunction:val=>{"number"==typeof val&&(val=val.toString());const[month,day]=val.split("/");return`${month}-${day}`}}}},CustomizedYAxisOptions={args:{data:data,leftAxisOptions:{showGridLines:!0,numberOfTicks:3}}},CustomizedOptionsForYScale={args:{data:data,yScaleOptions:{domain:[0,200]}}};BasicExample.parameters={...BasicExample.parameters,docs:{...BasicExample.parameters?.docs,source:{originalSource:"{\n  // More on args: https://storybook.js.org/docs/react/writing-stories/args\n  args: {\n    data\n  }\n}",...BasicExample.parameters?.docs?.source}}},CustomizedStyles.parameters={...CustomizedStyles.parameters,docs:{...CustomizedStyles.parameters?.docs,source:{originalSource:"{\n  // More on args: https://storybook.js.org/docs/react/writing-stories/args\n  args: {\n    data,\n    fill: 'orange',\n    strokeColor: 'lightseagreen',\n    innerPadding: 0.05,\n    width: 350,\n    height: 150\n  }\n}",...CustomizedStyles.parameters?.docs?.source}}},ShowTooltipAndReferenceLine.parameters={...ShowTooltipAndReferenceLine.parameters,docs:{...ShowTooltipAndReferenceLine.parameters?.docs,source:{originalSource:"{\n  // More on args: https://storybook.js.org/docs/react/writing-stories/args\n  args: {\n    data,\n    showTooltip: true\n  }\n}",...ShowTooltipAndReferenceLine.parameters?.docs?.source}}},CustomizedXAxisOptions.parameters={...CustomizedXAxisOptions.parameters,docs:{...CustomizedXAxisOptions.parameters?.docs,source:{originalSource:"{\n  // More on args: https://storybook.js.org/docs/react/writing-stories/args\n  args: {\n    data,\n    bottomAxisOptions: {\n      /**\r\n       * set to true to extend ticks on x axis and show them as grid lines\r\n       */\n      showGridLines: true,\n      /**\r\n       * Specified values to be used for ticks rather than using the scale’s automatic tick generator.\r\n       */\n      tickValues: ['12/1', '12/5', '12/10'],\n      shouldRotateTextLabels: true,\n      /**\r\n       * You can provide a custom format function mapping a value from the axis Domain to a formatted string for display purposes.\r\n       * @param val\r\n       * @returns\r\n       */\n      tickFormatFunction: (val: number | string) => {\n        if (typeof val === 'number') {\n          val = val.toString();\n        }\n        const [month, day] = val.split('/');\n        return `${month}-${day}`;\n      }\n    }\n  }\n}",...CustomizedXAxisOptions.parameters?.docs?.source}}},CustomizedYAxisOptions.parameters={...CustomizedYAxisOptions.parameters,docs:{...CustomizedYAxisOptions.parameters?.docs,source:{originalSource:"{\n  // More on args: https://storybook.js.org/docs/react/writing-stories/args\n  args: {\n    data,\n    leftAxisOptions: {\n      showGridLines: true,\n      numberOfTicks: 3\n    }\n  }\n}",...CustomizedYAxisOptions.parameters?.docs?.source}}},CustomizedOptionsForYScale.parameters={...CustomizedOptionsForYScale.parameters,docs:{...CustomizedOptionsForYScale.parameters?.docs,source:{originalSource:"{\n  // More on args: https://storybook.js.org/docs/react/writing-stories/args\n  args: {\n    data,\n    yScaleOptions: {\n      domain: [0, 200]\n    }\n  }\n}",...CustomizedOptionsForYScale.parameters?.docs?.source}}};const __namedExportsOrder=["BasicExample","CustomizedStyles","ShowTooltipAndReferenceLine","CustomizedXAxisOptions","CustomizedYAxisOptions","CustomizedOptionsForYScale"]},"./src/BarChart/Bars.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),d3__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/d3/src/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Bars=({xScale:xScale,yScale:yScale,data:data,svgContainerData:svgContainerData,fill:fill="steelblue"})=>{const barsGroup=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{svgContainerData&&xScale&&yScale&&data&&(()=>{const{dimension:dimension}=svgContainerData,{height:height}=dimension,existingBars=(0,d3__WEBPACK_IMPORTED_MODULE_1__.Ys)(barsGroup.current).selectAll("rect");existingBars.size()&&existingBars.remove(),(0,d3__WEBPACK_IMPORTED_MODULE_1__.Ys)(barsGroup.current).selectAll("rect").data(data).enter().append("rect").style("fill",fill).attr("x",(d=>"number"==typeof d.x?xScale(d.x.toString()):xScale(d.x))).attr("width",xScale.bandwidth()).attr("y",(d=>yScale(d.y))).attr("height",(d=>height-yScale(d.y)))})()}),[xScale,yScale,data]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("g",{ref:barsGroup,className:"bar-group"})};Bars.displayName="Bars",__webpack_exports__.Z=Bars;try{Bars.displayName="Bars",Bars.__docgenInfo={description:"",displayName:"Bars",props:{xScale:{defaultValue:null,description:"",name:"xScale",required:!0,type:{name:"ScaleBand<string | number>"}},yScale:{defaultValue:null,description:"",name:"yScale",required:!0,type:{name:"ScaleLinear<number, number, never>"}},svgContainerData:{defaultValue:null,description:"",name:"svgContainerData",required:!1,type:{name:"SvgContainerData"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"{ x: string | number; y: number; }[]"}},fill:{defaultValue:{value:"steelblue"},description:"fill color of bar rects",name:"fill",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/BarChart/Bars.tsx#Bars"]={docgenInfo:Bars.__docgenInfo,name:"Bars",path:"src/BarChart/Bars.tsx#Bars"})}catch(__react_docgen_typescript_loader_error){}}}]);